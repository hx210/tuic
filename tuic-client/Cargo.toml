[package]
name = "tuic-client"
version.workspace = true
authors.workspace = true
description = "Minimalistic TUIC client implementation as a reference"
categories = ["network-programming"]
keywords = ["network", "proxy", "quic", "tuic"]
edition.workspace = true
rust-version.workspace = true
readme.workspace = true
license.workspace = true
repository.workspace = true

[dependencies]
bytes = { version = "1", default-features = false, features = ["std"] }

env_logger = { version = "0.11", default-features = false, features = ["humantime"] }
humantime = { version = "2", default-features = false }
lexopt = { version = "0.3", default-features = false }
log = { version = "0.4", default-features = false, features = ["serde", "std"] }
once_cell = { version = "1", default-features = false, features = ["parking_lot", "std"] }

serde = { version = "1", default-features = false, features = ["derive", "std"] }
serde_json = { version = "1", default-features = false, features = ["std"] }
socket2 = { version = "0.5", default-features = false }
socks5-proto = { version = "0.3", default-features = false }
socks5-server = { version = "0.8", default-features = false }

uuid = { version = "1", default-features = false, features = ["serde", "std"] }

# QUIC
quinn = { version = "0.11", default-features = false, features = ["runtime-tokio", "rustls", "log"] }

# TUIC
tuic = { path = "../tuic", default-features = false }
tuic-quinn = { path = "../tuic-quinn", default-features = false }
register-count = { version = "0.1.0", default-features = false, features = ["std"] }

# Tokio/Async
crossbeam-utils = { version = "0.8", default-features = false, features = ["std"] }
tokio = { version = "1", default-features = false, features = ["io-util", "macros", "net", "parking_lot", "rt-multi-thread", "time"] }
tokio-util = { version = "0.7", default-features = false, features = ["compat"] }

# TLS
rustls = { version = "0.23", default-features = false }
rustls-native-certs = { version = "0.8", default-features = false }
rustls-pemfile = { version = "2", default-features = false, features = ["std"] }

# Error-handling
thiserror = { version = "2", default-features = false }
anyhow = "1"